// // Задача 64.Задайте значения M и N. Напишите рекурсивный метод, который выведет все натуральные числа кратные 3-ём в промежутке от M до N.
//M = 1; N = 9. -> "3, 6, 9" M = 13; 
//N = 20. -> "15, 18"
using System;

class Program
{
    static void Main(string[] args)
    {
        int M = 1;
        int N = 9;

        Console.WriteLine("Числа, кратные 3, в промежутке от {0} до {1}:", M, N);
        PrintMultiplesOfThree(M, N);
    }

    static void PrintMultiplesOfThree(int current, int end)
    {
        if (current <= end)
        {
            if (current % 3 == 0)
            {
                Console.Write(current);

                if (current + 3 <= end)
                {
                    Console.Write(", ");
                }
            }

            PrintMultiplesOfThree(current + 1, end);
        }
        else
        {
            Console.WriteLine();
        }
    }
}
// // Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.
// // M = 1; N = 15 -> 120
// // M = 4; N = 8. -> 30

Console.Write("Введите число M: ");
int m = Convert.ToInt32(Console.ReadLine());

Console.Write("Введите число N: ");
int n = Convert.ToInt32(Console.ReadLine());

SumFromMToN(m, n);

// вызов функции "сумма чисел от M до N"
void SumFromMToN(int m, int n)
{
    Console.Write(SumMN(m - 1, n));
}

// функция сумма чисел от M до N
int SumMN(int m, int n)
{
    int res = m;
    if (m == n)
        return 0;
    else
    {
        m++;
        res = m + SumMN(m, n);
        return res;
    }
}
// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
// m = 2, n = 3 -> A (m,n) = 9
// m = 3, n = 2 -> A (m,n) = 29

Консоль.Write("Введите число M: ");
= m int Преобразовать.ToInt32(консоль.Прочитай строку();,,

Консоль.Write("Введите число N: ");
= n int Преобразовать.ToInt32(консоль.Прочитай строку();,,

Функция Аккермана(m,n);


// вызов функции Аккермана
аннулирует функцию Аккермана(int m, int n)
{
 Консоль.Напишите(Аккерман(m, n));,, 
}

// функция Аккермана
int Аккерман( m, int n)
{
    если (m == 0)
    {
        верните n + 1;
    }
    иначе если (n == 0 && m > 0)
    {
        вернуть Аккерман(м - 1, 1);
    }
    ещё
    {
        ( вернутьАккерман(m - 1, Аккерман(m, n - 1))));,,
    }
}
